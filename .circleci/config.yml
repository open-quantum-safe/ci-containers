version: 2.1

# CircleCI doesn't handle large file sets properly for local builds
# https://github.com/CircleCI-Public/circleci-cli/issues/281#issuecomment-472808051
localCheckout: &localCheckout
  run: |-
    git config --global --add safe.directory /tmp/_circleci_local_build_repo
    PROJECT_PATH=$(cd ${CIRCLE_WORKING_DIRECTORY}; pwd)
    mkdir -p ${PROJECT_PATH}
    cd /tmp/_circleci_local_build_repo
    git ls-files -z | xargs -0 -s 2090860 tar -c | tar -x -C ${PROJECT_PATH} 
    cp -a /tmp/_circleci_local_build_repo/.git ${PROJECT_PATH}

.linux_job: &linuxjob
  docker:
    - image: ${IMAGE}
  steps:
    - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
    - setup_remote_docker
    - run:
        name: docker login
        command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
    - run:
        name: Ubuntu-Focal
        command: docker build --build-arg ARCH=x86_64 -t ci-ubuntu-focal .
        working_directory: ubuntu-focal
    # Debian used for ARM x-building
    - run:
        name: Debian Buster (10)
        command: cd debian-buster && docker build --build-arg ARCH=amd64 -t ci-debian-buster .
    - run:
        name: Debian Bullseye (11)
        command: cd debian-bullseye && docker build --build-arg ARCH=amd64 -t ci-debian-bullseye .
    # Centos discontinued; disable until real need appears
    #- run:
    #    name: Centos8
    #    command: cd centos-8 && docker build --build-arg ARCH=amd64 -t ci-centos8 .
    #- run:
    #    name: Centos7
    #    command: cd centos-7 && docker build --build-arg ARCH=amd64 -t ci-centos7 .
    - run:
        name: Alpine
        command: cd alpine && docker build --build-arg ARCH=amd64 -t ci-alpine .
    - when:
        condition:
          equal: [ main, << pipeline.git.branch >> ]
        steps:
          - run:
              name: Tag and push images
              command: |
                  docker tag ci-alpine $TARGETNAME/ci-alpine-amd64 && docker push $TARGETNAME/ci-alpine-amd64 && docker tag ci-ubuntu-focal $TARGETNAME/ci-ubuntu-focal-x86_64 && docker push $TARGETNAME/ci-ubuntu-focal-x86_64 && docker tag ci-debian-buster $TARGETNAME/ci-debian-buster-amd64 && docker push $TARGETNAME/ci-debian-buster-amd64 && docker tag ci-debian-bullseye $TARGETNAME/ci-debian-bullseye-amd64 && docker push $TARGETNAME/ci-debian-bullseye-amd64

jobs:
  ubuntu-focal-x86_64:
    <<: *linuxjob
    environment:
      IMAGE: openquantumsafe/ci-ubuntu-focal-x86_64:latest
  ubuntu-bionic-i386:
      docker:
        - image: openquantumsafe/ci-ubuntu-focal-x86_64:latest
      steps:
        - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
        - setup_remote_docker
        - run:
            name: docker login
            command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
        - run:
            name: Ubuntu-Bionic-i386
            command: docker build --build-arg ARCH=i386 -t ci-ubuntu-bionic .
            working_directory: ubuntu-bionic
        - when:
            condition:
              equal: [ main, << pipeline.git.branch >> ]
            steps:
              - run:
                  name: Tag and push image
                  command: |
                      docker tag ci-ubuntu-bionic $TARGETNAME/ci-ubuntu-bionic-i386 && docker push $TARGETNAME/ci-ubuntu-bionic-i386

  ubuntu-jammy:
      docker:
        - image: openquantumsafe/ci-ubuntu-focal-x86_64:latest
      steps:
        - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
        - setup_remote_docker
        - run:
            name: docker login
            command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
        - run:
            name: Ubuntu-Jammy
            command: docker build -t ci-ubuntu-jammy .
            working_directory: ubuntu-jammy
        - when:
            condition:
              equal: [ main, << pipeline.git.branch >> ]
            steps:
              - run:
                  name: Tag and push image
                  command: docker tag ci-ubuntu-jammy $TARGETNAME/ci-ubuntu-jammy && docker push $TARGETNAME/ci-ubuntu-jammy


  arm64:
    description: Building and pushing ARM64 CI image
    machine:
      image: ubuntu-2004:current
    resource_class: arm.medium
    steps:
      - run:
          name: Check versions
          command: |
            docker info
            docker version
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Authenticate to Docker
          command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
      - run:
          name: Build CI image
          command: |
            # The CircleCI executor offers 35 cores, but using
            # all of them might exhaust memory
            # explicitly tag platform
            docker version
            docker build --build-arg MAKE_DEFINES="-j 18" --build-arg ARCH=arm64 -t ci-ubuntu-focal-arm64 .
          working_directory: ubuntu-focal
      - when:
          condition:
            equal: [ main, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Tag and push image
                command: |
                  docker tag ci-ubuntu-focal-arm64 $TARGETNAME/ci-ubuntu-focal-arm64
                  docker push $TARGETNAME/ci-ubuntu-focal-arm64

workflows:
  version: 2
  build:
    jobs:
      - ubuntu-focal-x86_64:
          context: openquantumsafe
      - ubuntu-bionic-i386:
          context: openquantumsafe
      - ubuntu-jammy:
          context: openquantumsafe
      - arm64:
          context: openquantumsafe

