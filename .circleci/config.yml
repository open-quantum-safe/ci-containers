version: 2

# CircleCI doesn't handle large file sets properly for local builds
# https://github.com/CircleCI-Public/circleci-cli/issues/281#issuecomment-472808051
localCheckout: &localCheckout
  run: |-
    PROJECT_PATH=$(cd ${CIRCLE_WORKING_DIRECTORY}; pwd)
    mkdir -p ${PROJECT_PATH}
    cd /tmp/_circleci_local_build_repo
    git ls-files -z | xargs -0 -s 2090860 tar -c | tar -x -C ${PROJECT_PATH} 
    cp -a /tmp/_circleci_local_build_repo/.git ${PROJECT_PATH}

.linux_job: &linuxjob
  docker:
    - image: ${IMAGE}
  steps:
    - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
    - setup_remote_docker
    - run:
        name: docker login
        command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
    # Switch to Ubuntu focal - eventually remove entirely
    #- run:
    #    name: Ubuntu-Bionic
    #    command: cd ubuntu-bionic && docker build --build-arg ARCH=x86_64 -t ci-ubuntu-bionic . && docker tag ci-ubuntu-bionic $TARGETNAME/ci-ubuntu-bionic-x86_64
    - run:
        name: Ubuntu-Focal
        command: cd ubuntu-focal && docker build --build-arg ARCH=x86_64 -t ci-ubuntu-focal . && docker tag ci-ubuntu-focal $TARGETNAME/ci-ubuntu-focal-x86_64
    # Debian used for ARM x-building
    - run:
        name: Debian
        command: cd debian-buster && docker build --build-arg ARCH=amd64 -t ci-debian . && docker tag ci-debian $TARGETNAME/ci-debian-buster-amd64
    # Centos discontinued; disable until real need appears
    #- run:
    #    name: Centos8
    #    command: cd centos-8 && docker build --build-arg ARCH=amd64 -t ci-centos8 . && docker tag ci-centos8 $TARGETNAME/ci-centos-8-amd64
    #- run:
    #    name: Centos7
    #    command: cd centos-7 && docker build --build-arg ARCH=amd64 -t ci-centos7 . && docker tag ci-centos7 $TARGETNAME/ci-centos-7-amd64
    - run:
        name: Alpine
        command: cd alpine && docker build --build-arg ARCH=amd64 -t ci-alpine . && docker tag ci-alpine $TARGETNAME/ci-alpine-amd64
    - run:
        name: Push images
        command: docker push $TARGETNAME/ci-alpine-amd64 && docker push $TARGETNAME/ci-ubuntu-focal-x86_64 && docker push $TARGETNAME/ci-debian-buster-amd64

jobs:
  ubuntu-x86_64:
    <<: *linuxjob
    environment:
      IMAGE: openquantumsafe/ci-ubuntu-focal-x86_64:latest
  arm64:
    description: Building and pushing ARM64 CI image
    docker:
      - image: openquantumsafe/ci-debian-buster-amd64
    steps:
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Check versions
          command: |
            qemu-aarch64-static --version
            docker info
            docker version
      - run:
          name: Enable experimental features on docker server
          command: |
            ssh remote-docker <<EOF
              sudo bash -c 'echo "{\"experimental\": true}" > /etc/docker/daemon.json'
              sudo systemctl restart docker
            EOF
      - run:
          name: activate multiarch
          command: |
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes &&
            docker run -it arm64v8/debian:buster-slim uname -a
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - run:
          name: Authenticate to Docker
          command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
      - run:
          name: Build CI image
          command: |
            # The CircleCI executor offers 35 cores, but using
            # all of them might exhaust memory
            # explicitly tag platform
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker version
            docker build --platform arm64 --build-arg MAKE_DEFINES="-j 18" --build-arg ARCH=arm64 -t ci-ubuntu-focal-arm64 .
            docker tag ci-ubuntu-focal-arm64 $TARGETNAME/ci-ubuntu-focal-arm64
          working_directory: ubuntu-focal
      - run:
          name: Push image
          command: docker push $TARGETNAME/ci-ubuntu-focal-arm64

workflows:
  version: 2
  build:
    jobs:
      - ubuntu-x86_64:
          context: openquantumsafe
      - arm64:
          context: openquantumsafe

